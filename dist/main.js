(()=>{"use strict";var n={683:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=r},64:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([n.id,".header-container {\n  display: flex;\n  align-items: center;\n  margin-left: 40px;\n  position: relative;\n  z-index: 2;\n}\n\nh2 {\nletter-spacing: 2px;\n  z-index: 1;\n}\n\nimg {\n  position: absolute;\n  left: -40px;\n  width: 50px;\n  margin-left: 10px;\n  z-index: 0;\n}\n","",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;AACA,mBAAmB;EACjB,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,iBAAiB;EACjB,UAAU;AACZ",sourcesContent:[".header-container {\n  display: flex;\n  align-items: center;\n  margin-left: 40px;\n  position: relative;\n  z-index: 2;\n}\n\nh2 {\nletter-spacing: 2px;\n  z-index: 1;\n}\n\nimg {\n  position: absolute;\n  left: -40px;\n  width: 50px;\n  margin-left: 10px;\n  z-index: 0;\n}\n"],sourceRoot:""}]);const s=r},310:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([n.id,"h1 {\n    margin-bottom: 10px;\n}\n\np {\n    line-height: 1.5rem;\n}\n\n","",{version:3,sources:["webpack://./src/css/home.css"],names:[],mappings:"AAAA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:["h1 {\n    margin-bottom: 10px;\n}\n\np {\n    line-height: 1.5rem;\n}\n\n"],sourceRoot:""}]);const s=r},22:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(354),o=t.n(a),i=t(314),r=t.n(i)()(o());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Orbitron&family=Poppins:wght@700&family=Roboto:wght@700&family=Water+Brush&display=swap);"]),r.push([n.id,".content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\nh1 {\n    font-family: var(--poppins);\n    text-align: center;\n}\n\n.menu-container {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 70px;\n    width: 100%;\n    margin-top: 50px;\n}\n\n.menu-items {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border: 5px solid var(--chocolate);\n    border-radius: 15px;\n    min-height: 350px;\n    width: 300px;\n    /* padding: 35px 15px; */\n\n    h2 {\n        background: var(--chocolate);\n        width: 100%;\n        padding: 10px;\n    }\n\n    img {\n        position: absolute;\n        left: 50%;\n        top: -5%;\n        transform: translateX(50%) rotate(-35deg);\n        width: 100px;\n        z-index: 2;\n    }\n\n    p {\n        margin: auto;\n        padding: 10px 15px;\n    }\n\n    span {\n        text-align: right;\n        margin: 20px;\n        font-style: italic;\n    }\n}\n\n@media only screen and (max-width: 1024px) {\n    .menu-items {\n        width: 230px;\n        height: auto;\n\n        img {\n            width: 75px;\n        }\n    }\n}","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:"AAIA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mBAAmB;IACnB,2DAA2D;IAC3D,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,kCAAkC;IAClC,mBAAmB;IACnB,iBAAiB;IACjB,YAAY;IACZ,wBAAwB;;IAExB;QACI,4BAA4B;QAC5B,WAAW;QACX,aAAa;IACjB;;IAEA;QACI,kBAAkB;QAClB,SAAS;QACT,QAAQ;QACR,yCAAyC;QACzC,YAAY;QACZ,UAAU;IACd;;IAEA;QACI,YAAY;QACZ,kBAAkB;IACtB;;IAEA;QACI,iBAAiB;QACjB,YAAY;QACZ,kBAAkB;IACtB;AACJ;;AAEA;IACI;QACI,YAAY;QACZ,YAAY;;QAEZ;YACI,WAAW;QACf;IACJ;AACJ",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Orbitron&family=Poppins:wght@700&family=Roboto:wght@700&family=Water+Brush&display=swap");\n\n\n\n.content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\nh1 {\n    font-family: var(--poppins);\n    text-align: center;\n}\n\n.menu-container {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 70px;\n    width: 100%;\n    margin-top: 50px;\n}\n\n.menu-items {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border: 5px solid var(--chocolate);\n    border-radius: 15px;\n    min-height: 350px;\n    width: 300px;\n    /* padding: 35px 15px; */\n\n    h2 {\n        background: var(--chocolate);\n        width: 100%;\n        padding: 10px;\n    }\n\n    img {\n        position: absolute;\n        left: 50%;\n        top: -5%;\n        transform: translateX(50%) rotate(-35deg);\n        width: 100px;\n        z-index: 2;\n    }\n\n    p {\n        margin: auto;\n        padding: 10px 15px;\n    }\n\n    span {\n        text-align: right;\n        margin: 20px;\n        font-style: italic;\n    }\n}\n\n@media only screen and (max-width: 1024px) {\n    .menu-items {\n        width: 230px;\n        height: auto;\n\n        img {\n            width: 75px;\n        }\n    }\n}'],sourceRoot:""}]);const s=r},365:(n,e,t)=>{t.d(e,{A:()=>p});var a=t(354),o=t.n(a),i=t(314),r=t.n(i),s=t(310),A=t(22),c=t(683),l=t(64),d=r()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Orbitron&family=Poppins:wght@700&family=Roboto:wght@700&family=Water+Brush&display=swap);"]),d.i(s.A),d.i(A.A),d.i(c.A),d.i(l.A),d.push([n.id,':root {\n    --light-yellow: #ffde73;\n    --golden-yellow: #ffc60b;\n    --chocolate: #c16a08;\n    --dark-chocolate: #b15300;\n    --poppins: "Poppins", sans-serif;\n    --roboto: "Roboto", sans-serif;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    background: #f5f5f5;\n    height: 100%;\n\n    .content-wrapper {\n        width: 55vw;\n        height: 75vh;\n        margin: 50px auto;\n    }\n\n    header {\n        background: var(--golden-yellow);\n        color: var(--dark-chocolate);\n        display: flex;\n        align-items: center;\n        height: 80px;\n        min-width: 100%;\n        padding: 0px 20px;\n\n        \n    }\n\n    nav {\n        display: flex;\n\n        ul {\n            display: flex;\n            list-style: none;\n            width: 100%;\n\n            li {\n                background: var(--light-yellow);\n                text-align: center;\n                border-radius: 10px 10px 0 0;\n                width: 100%;\n                padding: 10px;\n                cursor: pointer;\n            }\n\n            li.active {\n                background: var(--chocolate);\n            }\n        }\n    }\n\n    #app {\n        background: var(--light-yellow);\n        color: rgb(0, 0, 0);\n        border: 8px solid var(--chocolate);\n        border-radius: 0 0 15px 15px;\n        width: 100%;\n        height: 100%;\n        padding: 50px;\n        overflow-y: scroll;\n    }\n\n    .content {\n        animation: slideToRight .7s ease forwards;\n    }\n\n    footer {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--golden-yellow);\n        position: fixed;\n        bottom: 0;\n        height: 50px;\n        width: 100%;\n        padding: 15px;\n    }\n}\n\n/* ANIMATION */\n@keyframes slideToRight {\n    from {\n        opacity: 0;\n        transform: translateX(-50px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n/* MEDIA QUERIES */\n@media only screen and (max-width: 1024px) {\n    body {\n        header {\n            height: 50px;\n        }\n    \n        #content-wrapper {\n            width: 85vw;\n        }\n    \n        #app {\n            padding: 30px;\n        }\n    }\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAMA;IACI,uBAAuB;IACvB,wBAAwB;IACxB,oBAAoB;IACpB,yBAAyB;IACzB,gCAAgC;IAChC,8BAA8B;AAClC;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,YAAY;;IAEZ;QACI,WAAW;QACX,YAAY;QACZ,iBAAiB;IACrB;;IAEA;QACI,gCAAgC;QAChC,4BAA4B;QAC5B,aAAa;QACb,mBAAmB;QACnB,YAAY;QACZ,eAAe;QACf,iBAAiB;;;IAGrB;;IAEA;QACI,aAAa;;QAEb;YACI,aAAa;YACb,gBAAgB;YAChB,WAAW;;YAEX;gBACI,+BAA+B;gBAC/B,kBAAkB;gBAClB,4BAA4B;gBAC5B,WAAW;gBACX,aAAa;gBACb,eAAe;YACnB;;YAEA;gBACI,4BAA4B;YAChC;QACJ;IACJ;;IAEA;QACI,+BAA+B;QAC/B,mBAAmB;QACnB,kCAAkC;QAClC,4BAA4B;QAC5B,WAAW;QACX,YAAY;QACZ,aAAa;QACb,kBAAkB;IACtB;;IAEA;QACI,yCAAyC;IAC7C;;IAEA;QACI,aAAa;QACb,mBAAmB;QACnB,uBAAuB;QACvB,gCAAgC;QAChC,eAAe;QACf,SAAS;QACT,YAAY;QACZ,WAAW;QACX,aAAa;IACjB;AACJ;;AAEA,cAAc;AACd;IACI;QACI,UAAU;QACV,4BAA4B;IAChC;IACA;QACI,UAAU;QACV,wBAAwB;IAC5B;AACJ;;AAEA,kBAAkB;AAClB;IACI;QACI;YACI,YAAY;QAChB;;QAEA;YACI,WAAW;QACf;;QAEA;YACI,aAAa;QACjB;IACJ;AACJ",sourcesContent:["@import url(\"https://fonts.googleapis.com/css2?family=Orbitron&family=Poppins:wght@700&family=Roboto:wght@700&family=Water+Brush&display=swap\");\n@import './css/home.css';\n@import './css/menu.css';\n@import './css/contact.css';\n@import './css/header.css';\n\n:root {\n    --light-yellow: #ffde73;\n    --golden-yellow: #ffc60b;\n    --chocolate: #c16a08;\n    --dark-chocolate: #b15300;\n    --poppins: \"Poppins\", sans-serif;\n    --roboto: \"Roboto\", sans-serif;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    background: #f5f5f5;\n    height: 100%;\n\n    .content-wrapper {\n        width: 55vw;\n        height: 75vh;\n        margin: 50px auto;\n    }\n\n    header {\n        background: var(--golden-yellow);\n        color: var(--dark-chocolate);\n        display: flex;\n        align-items: center;\n        height: 80px;\n        min-width: 100%;\n        padding: 0px 20px;\n\n        \n    }\n\n    nav {\n        display: flex;\n\n        ul {\n            display: flex;\n            list-style: none;\n            width: 100%;\n\n            li {\n                background: var(--light-yellow);\n                text-align: center;\n                border-radius: 10px 10px 0 0;\n                width: 100%;\n                padding: 10px;\n                cursor: pointer;\n            }\n\n            li.active {\n                background: var(--chocolate);\n            }\n        }\n    }\n\n    #app {\n        background: var(--light-yellow);\n        color: rgb(0, 0, 0);\n        border: 8px solid var(--chocolate);\n        border-radius: 0 0 15px 15px;\n        width: 100%;\n        height: 100%;\n        padding: 50px;\n        overflow-y: scroll;\n    }\n\n    .content {\n        animation: slideToRight .7s ease forwards;\n    }\n\n    footer {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--golden-yellow);\n        position: fixed;\n        bottom: 0;\n        height: 50px;\n        width: 100%;\n        padding: 15px;\n    }\n}\n\n/* ANIMATION */\n@keyframes slideToRight {\n    from {\n        opacity: 0;\n        transform: translateX(-50px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n/* MEDIA QUERIES */\n@media only screen and (max-width: 1024px) {\n    body {\n        header {\n            height: 50px;\n        }\n    \n        #content-wrapper {\n            width: 85vw;\n        }\n    \n        #app {\n            padding: 30px;\n        }\n    }\n}"],sourceRoot:""}]);const p=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(r[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);a&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var i={},r=[],s=0;s<n.length;s++){var A=n[s],c=a.base?A[0]+a.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,a);a.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=a(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=t(i[r]);e[s].references--}for(var A=a(n,o),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var i=e[a]={id:a,exports:{}};return n[a](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{function n(){const n=document.createElement("div");return n.classList.add("content"),n.innerHTML='\n    <h1>Our Mission</h1>\n    <p>\n    "To craft delectable, artisanal baked goods that delight our customers\' taste buds, bringing joy to everyday moments through the perfect blend of quality ingredients, passion, and expertise."\n    </p>\n    <br>\n    <h1>Our Vision</h1>\n    <p>\n    "To be the preferred bakery of choice, recognized for our commitment to exceptional flavor, innovation, and warm customer experiences, as we strive to elevate the art of baking and create a community where every bite tells a story of happiness and indulgence."\n    </p>\n    \n    \n    ',n}const e=t.p+"e7f1be05a1f042842e12.png",a=t.p+"75cbafe01d511d15d6f9.png",o=t.p+"4a00ad4946ad7cdb327a.png",i=t.p+"18fb88a93a7492772d67.png",r=t.p+"fd7ef289594d77be94bd.png",s=t.p+"67096840122004254464.png",A=[{name:"Muffin",image:e,alt:"muffin",price:"$4.99 per 6pcs",desc:"Indulge in the perfect harmony of moist, flavorful goodness with our delectable muffins. Bursting with a variety of delightful flavors, each bite is a taste of pure joy."},{name:"Croissant",image:a,alt:"croissant",price:"$3.99 per 12pcs",desc:"Elevate your morning routine with our flaky, buttery croissants. Delight in the golden layers of pastry that envelop a rich, indulgent filling, creating a truly exquisite experience."},{name:"Granola Bars",image:o,alt:"granola",price:"$6.99 per 24pcs",desc:"Fuel your day with our wholesome granola bars, crafted with a blend of hearty oats, nuts, and sweet natural ingredients. A nutritious and convenient snack that satisfies both your taste buds and your well-being."},{name:"Donut",image:r,alt:"donut",price:"$12.99 per 12pcs",desc:"Dive into a world of irresistible sweetness with our freshly baked doughnuts. Glazed to perfection and filled with an array of delightful fillings, these treats are a symphony of flavors that will leave you craving more."},{name:"Cake",image:i,alt:"cake",price:"24.99 per piece",desc:"Celebrate life's sweet moments with our decadent cakes. From classic flavors to innovative creations, our cakes are crafted with passion and precision, ensuring every slice is a celebration in itself."},{name:"Cinnamon Roll",image:s,alt:"cinnamon-roll",price:"$7.99 per 6pcs",desc:"Unwind and savor the comforting warmth of our cinnamon rolls. Soft, doughy layers swirl around a perfect blend of cinnamon and sugar, topped with a luscious glaze for a truly comforting and indulgent experience."}];var c=t(72),l=t.n(c),d=t(825),p=t.n(d),u=t(659),m=t.n(u),h=t(56),f=t.n(h),g=t(540),C=t.n(g),B=t(113),y=t.n(B),x=t(365),v={};function b(n){const e=document.getElementById("app");return e.innerHTML="",e.appendChild(n),e}v.styleTagTransform=y(),v.setAttributes=f(),v.insert=m().bind(null,"head"),v.domAPI=p(),v.insertStyleElement=C(),l()(x.A,v),x.A&&x.A.locals&&x.A.locals,b(n()),document.getElementById("home").addEventListener("click",(()=>b(n()))),document.getElementById("menu").addEventListener("click",(()=>b(function(){const n=document.createElement("div");n.classList.add("content"),n.innerHTML="<h1>Our Menu</h1>";const e=document.createElement("div");return e.classList.add("menu-container"),A.forEach((t=>{const a=document.createElement("div"),o=document.createElement("p"),i=document.createElement("span");a.classList.add("menu-items");const r=new Image;r.src=t.image,r.alt=t.alt,a.innerHTML=`<h2>${t.name}</h2>`,o.textContent=`${t.desc}`,i.textContent=`${t.price}`,a.appendChild(r),a.appendChild(o),a.appendChild(i),e.appendChild(a),n.appendChild(e)})),n}()))),document.getElementById("contact").addEventListener("click",(()=>b(function(){const n=document.createElement("div");return n.classList.add("content"),n.innerHTML="<h1>We look forward hearing from you</h1>",n}()))),function(){const n=document.querySelector("header");n.innerHTML="",n.appendChild(function(){const n=document.createElement("div");n.classList.add("header-container");const e=new Image;return e.src=a,e.alt="croissant",n.innerHTML="\n        <h2>Kwah-song</h2>\n    ",n.appendChild(e),n}())}(),document.addEventListener("DOMContentLoaded",(function(){var n=document.querySelectorAll("nav ul li");n.forEach((function(e){e.addEventListener("click",(function(){n.forEach((function(n){n.classList.remove("active")})),e.classList.add("active")}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,